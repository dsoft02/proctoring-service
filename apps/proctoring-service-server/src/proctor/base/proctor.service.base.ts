/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Proctor as PrismaProctor,
  Session as PrismaSession,
} from "@prisma/client";

export class ProctorServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ProctorCountArgs, "select">): Promise<number> {
    return this.prisma.proctor.count(args);
  }

  async proctors<T extends Prisma.ProctorFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProctorFindManyArgs>
  ): Promise<PrismaProctor[]> {
    return this.prisma.proctor.findMany<Prisma.ProctorFindManyArgs>(args);
  }
  async proctor<T extends Prisma.ProctorFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProctorFindUniqueArgs>
  ): Promise<PrismaProctor | null> {
    return this.prisma.proctor.findUnique(args);
  }
  async createProctor<T extends Prisma.ProctorCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProctorCreateArgs>
  ): Promise<PrismaProctor> {
    return this.prisma.proctor.create<T>(args);
  }
  async updateProctor<T extends Prisma.ProctorUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProctorUpdateArgs>
  ): Promise<PrismaProctor> {
    return this.prisma.proctor.update<T>(args);
  }
  async deleteProctor<T extends Prisma.ProctorDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProctorDeleteArgs>
  ): Promise<PrismaProctor> {
    return this.prisma.proctor.delete(args);
  }

  async findSessions(
    parentId: string,
    args: Prisma.SessionFindManyArgs
  ): Promise<PrismaSession[]> {
    return this.prisma.proctor
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .sessions(args);
  }
}
